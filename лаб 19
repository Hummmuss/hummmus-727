/*
//1. Дан целочисленный массив размера N.
//Удалить из массива все соседние одинаковые элементы, оставив их первые вхождения.
#include <iostream>
using namespace std;
int main()
{
	setlocale (LC_ALL, "RUS");
	int n, i, a, j;
	cout << "размер массива: "; 
	cin >> n; 
	cout << endl;
	int* arr1 = new int[n];
	for (int i = 0; i < n; ++i)
	{
		cout << "введите элемент массива № " << i + 1 << " "; 
		cin >> arr1[i];
	}
	a = n;
	cout << endl << "array #1 = ";
	for (i = 0; i < n; i++)
	{
		cout << arr1[i] << ' ';
	}
	for (i = 0; i < n; i++)
	{
		if (arr1[i] == arr1[i + 1])
		{
			a--;
		}
	}
	int* arr2 = new int[a];
	j = 0;
	for (i = 0; i < n; i++)
	{
		if (arr1[i] != arr1[i + 1])
		{
			arr2[j] = arr1[i];
			j++;
		}
	}
	cout << endl << "array #2 = ";
	for (i = 0; i < a; i++)
	{
		cout << arr2[i] << ' ';
	}


}
*/


//Дано целое число L (> 0) и целочисленный массив размера N. 
//Заменить каждую серию массива, длина которой больше L, на один элемент с нулевым значением
#include <iostream>
using namespace std;
int main()
{
	setlocale(LC_ALL, "rus");
	int n, i, a, L, j, k, c, g = 0;
	cout << "размер массива: ";
	cin >> n;
	a = n;
	cout << endl;
	int* arr1 = new int[n];
	for (int i = 0; i < n; ++i)
	{
		cout << "введите элемент массива №" << i + 1 << " ";
		cin >> arr1[i];
	}
	cout << endl << "array 1 = ";
	for (int i = 0; i < n; ++i)
	{
		cout << arr1[i] << ' ';
	}
	cout << "введите L" << endl;
	cin >> L;
	
	for (i = 0; i < n; i++)
	{
		k = 0; 
		while (arr1[i] == arr1[i + 1])
		{
			k++;
			i++;
		}
		if (k+1 > L)
		{
			a = a - k;
		}
	}
	int* arr2 = new int[a];
	//cout << endl << "a = " << a << endl;
	j = 0;
	for (i = 0; i < n; i++)
	{
		while (arr1[i] == arr1[i + 1])
		{
			i++;
			k++;
		}
		if (k + 1 > L)
		{
			arr2[j] = 0;
			j++;
			k = 0;
		}
		else
		{
			if (arr1[i] == arr1[i + 1])
			{
				for (g = 0; g < k+1; g++)
				{
					arr2[j] = arr1[i];
					i++;
					j++;
				}
			}
			else
			{
				arr2[j] = arr1[i];
				i++;
				j++;
			}

		}
	}

	cout << endl << "array 2 = ";
	for (int i = 0; i < a; ++i)
	{
		cout << arr2[i] << ' ';
	}
}	
